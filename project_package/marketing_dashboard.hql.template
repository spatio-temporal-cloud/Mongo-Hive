use maize;
insert overwrite table leadexplode partition(day="[DAY]")
select 
leads.id as leadid,
sessionid
from leads LATERAL VIEW explode(sessions) sessionarray as sessionid where leads.day="[DAY]";

insert overwrite table leadsession partition(day="[DAY]")
select
leadexplode.leadid as leadid,
sessions.id as sessionid,
sessions.date_time as date_time,
sessions.userAgent_operatingSystem as userAgent_operatingSystem,
sessions.userAgent_browser as userAgent_browser,
sessions.userAgent_deviceType as userAgent_deviceType,
sessions.userAgent_mobileDevice as userAgent_mobileDevice,
sessions.order1 as orderid,
sessions.agent as agent,
sessions.callCenter as callCenter,
sessions.agent_callCenterName as agent_callCenterName
from leadexplode LEFT OUTER JOIN sessions 
ON(leadexplode.sessionid=sessions.id and leadexplode.day="[DAY]" and sessions.day="[DAY]");

add jar distinctlead.jar;
create temporary function distinctlead as 'com.hive.udaf.DistinctLead';

insert overwrite table leaddistinct partition(day="[DAY]")
select 
leadid,
distinctlead(sessionid,date_time,orderid) as sessionid
from leadsession where leadsession.day="[DAY]" group by leadid; 



insert overwrite table leadsession2 partition(day="[DAY]")
select 
leaddistinct.leadid as leadid,
sessions.id as sessionid,
sessions.userAgent_operatingSystem as userAgent_operatingSystem,
sessions.userAgent_browser as userAgent_browser,
sessions.userAgent_deviceType as userAgent_deviceType,
sessions.userAgent_mobileDevice as userAgent_mobileDevice,
sessions.order1 as orderid,
sessions.agent as agent,
sessions.callCenter as callCenter,
sessions.agent_callCenterName as agent_callCenterName
from leaddistinct LEFT OUTER JOIN sessions 
ON (leaddistinct.sessionid=sessions.id and leaddistinct.day="[DAY]" and sessions.day="[DAY]");



insert overwrite table leadsession3 partition(day="[DAY]")
select 
leads.id as leadid,
leadsession2.sessionid as sessionid,
leads.date_time as date_time,
leads.address_city as address_city,
leads.address_line as address_line,
leads.address_state as address_state,
leads.address_suite as address_suite,
leads.address_zip as address_zip,
leads.leadSource as leadSource,
leads.leadSourceName as leadSourceName,
leads.providerPhone as providerPhone,
leads.semTracking_naturalTerms as semTracking_naturalTerms,
leads.semTracking_searchEngine as semTracking_searchEngine,
leads.semTracking_adGroup as semTracking_adGroup,
leads.semTracking_campaign as semTracking_campaign,
leads.semTracking_terms as semTracking_terms,
leadsession2.userAgent_operatingSystem as userAgent_operatingSystem,
leadsession2.userAgent_browser as userAgent_browser,
leadsession2.userAgent_deviceType as userAgent_deviceType,
leadsession2.userAgent_mobileDevice as userAgent_mobileDevice,
leadsession2.orderid as orderid,
leadsession2.agent as agent,
leadsession2.callCenter as callCenter,
leadsession2.agent_callCenterName as agent_callCenterName
from leads LEFT OUTER JOIN leadsession2 
ON (leads.id=leadsession2.leadid and leads.day="[DAY]" and leadsession2.day="[DAY]");



insert overwrite table leaddetail partition(day="[DAY]")
select
leadsession3.leadid as leadid,
leadsession3.sessionid as sessionid,
leadsession3.date_time as date_time,
leadsession3.address_city as address_city,
leadsession3.address_line as address_line,
leadsession3.address_state as address_state,
leadsession3.address_suite as address_suite,
leadsession3.address_zip as address_zip,
leadsession3.leadSource as leadSource,
leadsession3.leadSourceName as leadSourceName,
leadsession3.providerPhone as providerPhone,
leadsession3.semTracking_naturalTerms as semTracking_naturalTerms,
leadsession3.semTracking_searchEngine as semTracking_searchEngine,
leadsession3.semTracking_adGroup as semTracking_adGroup,
leadsession3.semTracking_campaign as semTracking_campaign,
leadsession3.semTracking_terms as semTracking_terms,
leadsession3.userAgent_operatingSystem as userAgent_operatingSystem,
leadsession3.userAgent_browser as userAgent_browser,
leadsession3.userAgent_deviceType as userAgent_deviceType,
leadsession3.userAgent_mobileDevice as userAgent_mobileDevice,
leadsession3.agent as agent,
leadsession3.callCenter as callCenter,
leadsession3.agent_callCenterName as agent_callCenterName,
orders.id as orderid ,
orders.providerId as providerId,
orders.providerCode as providerCode,
orders.providerName as providerName,
orders.trackingId as trackingId,
orders.API as API,
orders.lineItemDescription as lineItemDescription,
orders.price as  price,
orders.term as term,
orders.description as description,
orders.verticalCode as verticalCode,
orders.lineItemCount as lineItemCount,
orders.productName as productName
from leadsession3 LEFT OUTER JOIN orders 
ON(leadsession3.orderid=orders.id and leadsession3.day="[DAY]" and orders.day="[DAY]");


insert overwrite table sessionlead partition(day="[DAY]")
select
sessions.date_time as date_time,
sessions.id as sessionid,
sessions.lead as leadid,
sessions.userAgent_operatingSystem as userAgent_operatingSystem,
sessions.userAgent_browser as userAgent_browser,
sessions.userAgent_deviceType as userAgent_deviceType,
sessions.userAgent_mobileDevice as userAgent_mobileDevice,
sessions.order1 as orderid,
sessions.agent as agent,
sessions.callCenter as callCenter,
sessions.agent_callCenterName as agent_callCenterName,
leads.address_city as address_city,
leads.address_line as address_line,
leads.address_state as address_state,
leads.address_suite as address_suite,
leads.address_zip as address_zip,
leads.leadSource as leadSource,
leads.leadSourceName as leadSourceName,
leads.providerPhone as providerPhone,
leads.semTracking_naturalTerms as semTracking_naturalTerms,
leads.semTracking_searchEngine as semTracking_searchEngine,
leads.semTracking_adGroup as semTracking_adGroup,
leads.semTracking_campaign as semTracking_campaign,
leads.semTracking_terms as semTracking_terms
from sessions LEFT OUTER JOIN leads 
ON(sessions.lead=leads.id and sessions.day="[DAY]" and leads.day="[DAY]");


insert overwrite table sessiondetail  partition (day="[DAY]")
select
sessionlead.date_time as date_time,
sessionlead.sessionid as sessionid,
sessionlead.leadid as leadid,
sessionlead.userAgent_operatingSystem as userAgent_operatingSystem,
sessionlead.userAgent_browser as userAgent_browser,
sessionlead.userAgent_deviceType as userAgent_deviceType,
sessionlead.userAgent_mobileDevice as userAgent_mobileDevice,
sessionlead.agent as agent,
sessionlead.callCenter as callCenter,
sessionlead.agent_callCenterName as agent_callCenterName,
sessionlead.address_city as address_city,
sessionlead.address_line as address_line,
sessionlead.address_state as address_state,
sessionlead.address_suite as address_suite,
sessionlead.address_zip as address_zip,
sessionlead.leadSource as leadSource,
sessionlead.leadSourceName as leadSourceName,
sessionlead.providerPhone as providerPhone,
sessionlead.semTracking_naturalTerms as semTracking_naturalTerms,
sessionlead.semTracking_searchEngine as semTracking_searchEngine,
sessionlead.semTracking_adGroup as semTracking_adGroup,
sessionlead.semTracking_campaign as semTracking_campaign,
sessionlead.semTracking_terms as semTracking_terms,
orders.id as orderid,
orders.providerId as providerId,
orders.providerCode as providerCode,
orders.providerName as providerName,
orders.trackingId as trackingId,
orders.api as api,
orders.orderConfirmationId as orderConfirmationId,
orders.lineItemDescription as lineItemDescription,
orders.price as price,
orders.term as term,
orders.description as description,
orders.verticalCode as verticalCode,
orders.lineItemCount as lineItemCount,
orders.productName as productName
from sessionlead LEFT OUTER JOIN orders 
ON(sessionlead.orderid=orders.id and sessionlead.day="[DAY]" and orders.day="[DAY]");


insert overwrite table ordersession partition(day="[DAY]")
select 
orders.date_time as date_time,
orders.id as orderid,
orders.providerId as providerId,
orders.providerCode as providerCode,
orders.providerName as providerName,
orders.trackingId as trackingId,
orders.API as API,
orders.orderConfirmationId as orderConfirmationId,
orders.lineItemDescription as lineItemDescription,
orders.price as price,
orders.term as term,
orders.description as description,
orders.verticalCode as verticalCode,
orders.lineItemCount as lineItemCount,
orders.productName as productName,
sessions.userAgent_operatingSystem as userAgent_operatingSystem,
sessions.userAgent_browser as userAgent_browser,
sessions.userAgent_deviceType as userAgent_deviceType,
sessions.userAgent_mobileDevice as userAgent_mobileDevice,
sessions.id as sessionid,
sessions.lead as leadid,
sessions.agent as agent,
sessions.callCenter as callCenter,
sessions.agent_callCenterName as agent_callCenterName
from orders LEFT OUTER JOIN sessions 
ON(orders.session=sessions.id and orders.day="[DAY]" and sessions.day="[DAY]");




insert overwrite table ordersessionlead partition(day="[DAY]")
select 
ordersession.date_time as date_time,
ordersession.orderid as orderid,
ordersession.providerId as providerId,
ordersession.providerCode as providerCode,
ordersession.providerName as providerName,
ordersession.trackingId as trackingId,
ordersession.API as API,
ordersession.orderConfirmationId as orderConfirmationId,
ordersession.lineItemDescription as lineItemDescription,
ordersession.price as price,
ordersession.term as term,
ordersession.description as description,
ordersession.verticalCode as verticalCode,
ordersession.lineItemCount as lineItemCount,
ordersession.productname as productname,
ordersession.userAgent_operatingSystem as userAgent_operatingSystem,
ordersession.userAgent_browser as userAgent_browser,
ordersession.userAgent_deviceType as userAgent_deviceType,
ordersession.userAgent_mobileDevice as userAgent_mobileDevice,
ordersession.sessionid as sessionid,
ordersession.agent as agent,
ordersession.callCenter as callCenter,
ordersession.agent_callCenterName as agent_callCenterName,
leads.id as leadid,
leads.address_city as address_city,
leads.address_line as address_line,
leads.address_state as address_state,
leads.address_suite as address_suite,
leads.address_zip as address_zip,
leads.leadSource as leadSource,
leads.leadSourceName as leadSourceName,
leads.providerPhone as  providerPhone,
leads.semTracking_naturalTerms as semTracking_naturalTerms,
leads.semTracking_searchEngine as semTracking_searchEngine,
leads.semTracking_adGroup as semTracking_adGroup,
leads.semTracking_campaign as semTracking_campaign,
leads.semTracking_terms as semTracking_terms
from ordersession LEFT OUTER JOIN leads 
ON(ordersession.leadid=leads.id and ordersession.day="[DAY]" and leads.day="[DAY]");



insert overwrite table customerexplode partition(day="[DAY]")
select 
id as customerid,
customerName,
email,
phoneNumber,
leadid
from customers LATERAL VIEW explode(leads) leadarray as leadid
where customers.day="[DAY]";



insert overwrite table orderdetail partition(day="[DAY]")
select 
ordersessionlead.date_time as date_time,
ordersessionlead.orderid as orderid,
ordersessionlead.providerId as providerId,
ordersessionlead.providerCode as providerCode,
ordersessionlead.providerName as providerName,
ordersessionlead.trackingId as trackingId,
ordersessionlead.API as API,
ordersessionlead.orderConfirmationId as orderConfirmationId,
ordersessionlead.lineItemDescription as lineItemDescription,
ordersessionlead.price as price,
ordersessionlead.term as term,
ordersessionlead.description as description,
ordersessionlead.verticalCode as verticalCode,
ordersessionlead.lineItemCount as lineItemCount,
ordersessionlead.productName as productName,
ordersessionlead.userAgent_operatingSystem as userAgent_operatingSystem,
ordersessionlead.userAgent_browser as userAgent_browser,
ordersessionlead.userAgent_deviceType as userAgent_deviceType,
ordersessionlead.userAgent_mobileDevice as userAgent_mobileDevice,
ordersessionlead.sessionid as sessionid,
ordersessionlead.agent as agent,
ordersessionlead.callCenter as callCenter,
ordersessionlead.agent_callCenterName as agent_callCenterName,
ordersessionlead.leadid as leadid,
ordersessionlead.address_city as address_city,
ordersessionlead.address_line as address_line,
ordersessionlead.address_state as address_state,
ordersessionlead.address_suite as address_suite,
ordersessionlead.address_zip as address_zip,
ordersessionlead.leadSource as leadSource,
ordersessionlead.leadSourceName as leadSourceName,
ordersessionlead.providerPhone as providerPhone,
ordersessionlead.semTracking_naturalTerms as semTracking_naturalTerms,
ordersessionlead.semTracking_searchEngine as semTracking_searchEngine,
ordersessionlead.semTracking_adGroup as semTracking_adGroup,
ordersessionlead.semTracking_campaign as semTracking_campaign,
ordersessionlead.semTracking_terms as semTracking_terms,
customerexplode.customerid as customerid,
customerexplode.customerName as customerName,
customerexplode.email as email,
customerexplode.phoneNumber as phoneNumber
from ordersessionlead LEFT OUTER JOIN customerexplode 
ON(ordersessionlead.leadid=customerexplode.leadid and ordersessionlead.day="[DAY]" and customerexplode.day="[DAY]");


insert overwrite table visitlead partition(day="[DAY]")
select 
visits.id as visitid,
visits.date_time as date_time,
visits.lead as leadid,
visits.session as sessionid,
leads.semTracking_campaign as semTracking_campaign,
leads.semTracking_adGroup as semTracking_adGroup,
leads.semTracking_terms as semTracking_terms,
leads.semTracking_searchEngine as semTracking_searchEngine
from visits LEFT OUTER JOIN leads
ON(visits.lead=leads.id and visits.day="[DAY]" and leads.day="[DAY]");





insert overwrite table visitratio partition(day="[DAY]")
select 
visitlead.visitid as visitid,
visitlead.date_time as date_time,
visitlead.leadid as leadid,
visitlead.sessionid as sessionid,
sessions.order1 as orderid,
visitlead.semTracking_campaign as semTracking_campaign,
visitlead.semTracking_adGroup as semTracking_adGroup,
visitlead.semTracking_terms as semTracking_terms,
visitlead.semTracking_searchEngine as semTracking_searchEngine
from visitlead LEFT OUTER JOIN sessions
ON(visitlead.sessionid=sessions.id and visitlead.day="[DAY]" and sessions.day="[DAY]");





